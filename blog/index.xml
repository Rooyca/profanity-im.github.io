<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>profanity</title>
    <link>https://profanity-im.github.io/blog/</link>
    <description>Recent content on profanity</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Feb 2023 12:03:36 +0100</lastBuildDate>
    
	<atom:link href="https://profanity-im.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>New Profanity Old System</title>
      <link>https://profanity-im.github.io/blog/post/distrobox/</link>
      <pubDate>Wed, 22 Feb 2023 12:03:36 +0100</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/distrobox/</guid>
      <description>&lt;p&gt;Occasionally people visit our MUC asking how to run the latest profanity release on years old systems.
For some distributions people maintain a backports project, so you can get it from there if available.&lt;/p&gt;
&lt;p&gt;Here we want to describe another methods, using containers, more specifically &lt;a href=&#34;https://github.com/89luca89/distrobox&#34;&gt;distrobox&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;whats-distrobox&#34;&gt;What&amp;rsquo;s Distrobox?&lt;/h1&gt;
&lt;p&gt;It&amp;rsquo;s basically a tool that let&amp;rsquo;s you run another distribution on your system. It uses docker/podman to create containers that are well integrated into your host system.
This means all your Profanity config files etc will be in the usual place in &lt;code&gt;~/.config/profanity&lt;/code&gt; and &lt;code&gt;~/.local/share/profanity&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Be aware:
Profanitys configuration files might change with new versions. Usually we transform old config files into the new format. If you however use distrobox to run the latest Profanity and then want to go back to your old version it might be that your old Profanity doesn&amp;rsquo;t understand the new or changed config options.&lt;/p&gt;
&lt;h1 id=&#34;setup&#34;&gt;Setup&lt;/h1&gt;
&lt;p&gt;You need to have docker/podman installed. And the daemon should be running.
Install distrobox preferably via your distribution package manager. Alternatively you can use the infamous line &lt;code&gt;curl -s https://raw.githubusercontent.com/89luca89/distrobox/main/install | sudo sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In this guide we will use an openSUSE Tumbleweed maintainer, since it&amp;rsquo;s a rolling release distribution that will always have the latest Profanity available.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;host$ distrobox-create --name profanity-on-tw --image opensuse/tumbleweed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Using default tag: latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;latest: Pulling from opensuse/tumbleweed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f7cda0ba8b2c: Pull complete
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Digest: sha256:8d4c43253942e84737681ee8307c79be4ca9ec9011b6616d40b2ef204143ab88
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Status: Downloaded newer image for opensuse/tumbleweed:latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker.io/opensuse/tumbleweed:latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating &amp;#39;profanity-on-tw&amp;#39; using image opensuse/tumbleweed	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Distrobox &amp;#39;profanity-on-tw&amp;#39; successfully created.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;To enter, run:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;distrobox enter profanity-on-tw
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;profanity-on-tw
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can now enter this container and install profanity in it via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;host&lt;span style=&#34;&#34;&gt;$&lt;/span&gt; distrobox-enter profanity-on-tw
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Container profanity-on-tw is not running.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Starting container profanity-on-tw
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;run this command to follow along:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; docker logs -f profanity-on-tw
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Starting container...                  	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Installing basic packages...           	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Setting up read-only mounts...         	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Setting up read-write mounts...        	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Setting up host&lt;span style=&#34;&#34;&gt;&amp;#39;&lt;/span&gt;s sockets integration...	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Integrating host&lt;span style=&#34;&#34;&gt;&amp;#39;&lt;/span&gt;s themes, icons, fonts...	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Setting up &lt;span style=&#34;color:#00f&#34;&gt;package&lt;/span&gt; manager exceptions...	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Setting up rpm exceptions...           	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Setting up sudo...                     	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Setting up groups...                   	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Integrating host&lt;span style=&#34;&#34;&gt;&amp;#39;&lt;/span&gt;s themes, icons, fonts...	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Setting up &lt;span style=&#34;color:#00f&#34;&gt;package&lt;/span&gt; manager exceptions...	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Setting up rpm exceptions...           	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Setting up sudo...                     	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Setting up groups...                   	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Setting up users...                    	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Executing init hooks...                	 [ OK ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Container Setup Complete!
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;profanity-on-tw&lt;span style=&#34;&#34;&gt;$&lt;/span&gt; sudo zypper in profanity
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Loading repository data...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Reading installed packages...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Resolving &lt;span style=&#34;color:#00f&#34;&gt;package&lt;/span&gt; dependencies...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The following 4 recommended packages were automatically selected:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  python310 python310-curses python310-dbm python310-pip
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The following 16 NEW packages are going to be installed:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  libgdbm6 libgdbm_compat4 libmpdec3 libotr5 libpython3_10-1_0 libsignal-protocol-c2 libstrophe0 profanity
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  profanity-mini python310 python310-base python310-curses python310-dbm python310-pip python310-setuptools
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  shared-python-startup
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;16 new packages to install.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Overall download size: 15.7 MiB. Already cached: 0 B. After the operation, additional 60.1 MiB will be used.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Continue&lt;span style=&#34;&#34;&gt;?&lt;/span&gt; [y/n/v/...&lt;span style=&#34;&#34;&gt;?&lt;/span&gt; shows all options] (y): y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: libgdbm6-1.23-1.10.x86_64 (openSUSE-Tumbleweed-Oss)                                  (1/16),  53.0 KiB    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: libgdbm6-1.23-1.10.x86_64.rpm ........................................................[done (303.6 KiB/s)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: libmpdec3-2.5.1-2.12.x86_64 (openSUSE-Tumbleweed-Oss)                                (2/16),  82.8 KiB    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: libmpdec3-2.5.1-2.12.x86_64.rpm ......................................................[done (466.2 KiB/s)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: libotr5-4.1.1-4.1.x86_64 (openSUSE-Tumbleweed-Oss)                                   (3/16),  60.7 KiB    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: libotr5-4.1.1-4.1.x86_64.rpm .........................................................[done (624.3 KiB/s)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: libsignal-protocol-c2-2.3.3-1.15.x86_64 (openSUSE-Tumbleweed-Oss)                    (4/16), 163.7 KiB    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: libsignal-protocol-c2-2.3.3-1.15.x86_64.rpm ..........................................[done (773.8 KiB/s)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: libstrophe0-0.12.2-1.3.x86_64 (openSUSE-Tumbleweed-Oss)                              (5/16),  89.5 KiB    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: libstrophe0-0.12.2-1.3.x86_64.rpm ....................................................[done (548.6 KiB/s)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: shared-python-startup-0.1-6.9.noarch (openSUSE-Tumbleweed-Oss)                       (6/16),  12.9 KiB    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: shared-python-startup-0.1-6.9.noarch.rpm ...........................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: libgdbm_compat4-1.23-1.10.x86_64 (openSUSE-Tumbleweed-Oss)                           (7/16),  27.7 KiB    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: libgdbm_compat4-1.23-1.10.x86_64.rpm ...................................................[done (1.2 KiB/s)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: libpython3_10-1_0-3.10.9-2.2.x86_64 (openSUSE-Tumbleweed-Oss)                        (8/16),   1.3 MiB    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: libpython3_10-1_0-3.10.9-2.2.x86_64.rpm ..............................................[done (882.1 KiB/s)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: python310-base-3.10.9-2.2.x86_64 (openSUSE-Tumbleweed-Oss)                           (9/16),   9.1 MiB    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: python310-base-3.10.9-2.2.x86_64.rpm .................................................[done (975.5 KiB/s)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: python310-setuptools-65.6.3-1.2.noarch (openSUSE-Tumbleweed-Oss)                    (10/16),   1.3 MiB    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: python310-setuptools-65.6.3-1.2.noarch.rpm ...........................................[done (913.8 KiB/s)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: python310-pip-22.3.1-1.2.noarch (openSUSE-Tumbleweed-Oss)                           (11/16),   2.5 MiB    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: python310-pip-22.3.1-1.2.noarch.rpm ..................................................[done (958.3 KiB/s)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: python310-3.10.9-2.2.x86_64 (openSUSE-Tumbleweed-Oss)                               (12/16), 168.5 KiB    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: python310-3.10.9-2.2.x86_64.rpm ......................................................[done (738.3 KiB/s)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: python310-dbm-3.10.9-2.2.x86_64 (openSUSE-Tumbleweed-Oss)                           (13/16), 141.2 KiB    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: python310-dbm-3.10.9-2.2.x86_64.rpm ..................................................[done (806.6 KiB/s)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: python310-curses-3.10.9-2.2.x86_64 (openSUSE-Tumbleweed-Oss)                        (14/16), 171.6 KiB    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: python310-curses-3.10.9-2.2.x86_64.rpm ...............................................[done (910.2 KiB/s)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: profanity-0.13.1-1.2.x86_64 (openSUSE-Tumbleweed-Oss)                               (15/16), 104.8 KiB    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: profanity-0.13.1-1.2.x86_64.rpm ......................................................[done (744.9 KiB/s)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: profanity-mini-0.13.1-1.2.x86_64 (openSUSE-Tumbleweed-Oss)                          (16/16), 446.4 KiB    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrieving: profanity-mini-0.13.1-1.2.x86_64.rpm .................................................[done (934.5 KiB/s)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Checking &lt;span style=&#34;color:#00f&#34;&gt;for&lt;/span&gt; file conflicts: ...................................................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;( 1/16) Installing: libgdbm6-1.23-1.10.x86_64 ..................................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;( 2/16) Installing: libmpdec3-2.5.1-2.12.x86_64 ................................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;( 3/16) Installing: libotr5-4.1.1-4.1.x86_64 ...................................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;( 4/16) Installing: libsignal-protocol-c2-2.3.3-1.15.x86_64 ....................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;( 5/16) Installing: libstrophe0-0.12.2-1.3.x86_64 ..............................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;( 6/16) Installing: shared-python-startup-0.1-6.9.noarch .......................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;( 7/16) Installing: libgdbm_compat4-1.23-1.10.x86_64 ...........................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;( 8/16) Installing: libpython3_10-1_0-3.10.9-2.2.x86_64 ........................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;( 9/16) Installing: python310-base-3.10.9-2.2.x86_64 ...........................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(10/16) Installing: python310-setuptools-65.6.3-1.2.noarch .....................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(11/16) Installing: python310-pip-22.3.1-1.2.noarch ............................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(12/16) Installing: python310-3.10.9-2.2.x86_64 ................................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(13/16) Installing: python310-dbm-3.10.9-2.2.x86_64 ............................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(14/16) Installing: python310-curses-3.10.9-2.2.x86_64 .........................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(15/16) Installing: profanity-0.13.1-1.2.x86_64 ................................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;update-alternatives: using /usr/bin/profanity-mini to provide /usr/bin/profanity (profanity) in auto mode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(16/16) Installing: profanity-mini-0.13.1-1.2.x86_64 ...........................................................[done]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Notice how the bash prompt changed from &lt;code&gt;host$&lt;/code&gt; to &lt;code&gt;profanity-on-tw$&lt;/code&gt;, which is the name we gave our container.
So the call to zypper happened inside that container. You can now start profanity. And on your host system you will then see the usual files in &lt;code&gt;~/.config/profanity&lt;/code&gt;.
Type &lt;code&gt;exit&lt;/code&gt; to get out.&lt;/p&gt;
&lt;h1 id=&#34;usage&#34;&gt;Usage&lt;/h1&gt;
&lt;p&gt;Each time you want to start profanity you now have to do enter the container and start it there:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;host$ distrobox-enter profanity-on-tw
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;profanity-on-tw$ profanity
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You have however also the option to &amp;ldquo;export&amp;rdquo; profanity to your host system.
Some people have a &lt;code&gt;~/bin&lt;/code&gt;, &lt;code&gt;~/.local/bin&lt;/code&gt; or another directory where they put binaries or scripts which they make available via the &lt;code&gt;$PATH&lt;/code&gt; variable.
Here we will use the &lt;code&gt;~/.local/bin&lt;/code&gt; folder.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;profanity-on-tw$ distrobox-export --bin /usr/bin/profanity --export-path $HOME/.local/bin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now you can call &lt;code&gt;profanity&lt;/code&gt; even from the host system. It will be the latest version of Profanity and all its dependencies, running inside a container. With full access to your usual environment.&lt;/p&gt;
&lt;h1 id=&#34;uninstall&#34;&gt;Uninstall&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;host$ distrobox-stop profanity-on-tw
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;host$ distrobox-rm profanity-on-tw
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Profanity 0.13.1</title>
      <link>https://profanity-im.github.io/blog/post/release-0131/</link>
      <pubDate>Thu, 13 Oct 2022 00:00:00 +0100</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/release-0131/</guid>
      <description>&lt;p&gt;One month ago we released Profanity 0.13.0 and yesterday the minor release 0.13.1.&lt;/p&gt;
&lt;p&gt;18 people contributed code to this release: @binex-dsk, @cockroach, @DebXWoody, @MarcoPolo-PasTonMolo, @mdosch, @nandesu-utils, @netboy3, @paulfertser, @sjaeckel, @Zash, @omar-polo, @wahjava, @vinegret, @sgn, Max Wuttke, @tran-h-trung, @techmetx11 and @jubalh.
Also a big thanks to our sponsors: @mdosch, @wstrm, @LeSpocky, @jamesponddotco and one anonymous person.&lt;/p&gt;
&lt;p&gt;We would also like to thank our testers, packagers and users.&lt;/p&gt;
&lt;p&gt;The release already landed several major distributions.&lt;/p&gt;
&lt;p&gt;For a list of changes please see the &lt;a href=&#34;https://github.com/profanity-im/profanity/releases/tag/0.13.0&#34;&gt;0.13.0&lt;/a&gt; and &lt;a href=&#34;https://github.com/profanity-im/profanity/releases/tag/0.13.1&#34;&gt;0.13.1&lt;/a&gt; release notes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Profanity 0.12.0</title>
      <link>https://profanity-im.github.io/blog/post/release-0120/</link>
      <pubDate>Wed, 30 Mar 2022 00:00:00 +0100</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/release-0120/</guid>
      <description>&lt;p&gt;Eight months and 207 commits after 0.11.0 we are happy to release 0.12.0.&lt;/p&gt;
&lt;p&gt;16 people contributed code to it: @sjaeckel, @MarcoPolo-PasTonMolo, @paulfertser,
@DebXWoody, @trofi, @nandesu-utils, @carlocab, @binex-dsk, @nlfx, @JurajMlich,
@wstrm, @arya-pratap-singh, @a02c1175-5220-4e75-b7a1-18e20548305f,
@mdosch, @jugendhacker and @jubalh.&lt;/p&gt;
&lt;p&gt;That certainly is one of our records!&lt;/p&gt;
&lt;p&gt;Thanks to everybody who was involved, be it testing, writing documentation, updating the website or whatever you did!
I also would like to express my gratitude to my sponsors &lt;a href=&#34;https://github.com/mdosch&#34;&gt;mdosch&lt;/a&gt;, &lt;a href=&#34;https://github.com/wstrm&#34;&gt;wstrm&lt;/a&gt;, &lt;a href=&#34;https://github.com/jamesponddotco&#34;&gt;jamesponddotco&lt;/a&gt; and &lt;a href=&#34;https://github.com/LeSpocky&#34;&gt;LeSpocky&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;libmesode&#34;&gt;libmesode&lt;/h2&gt;
&lt;p&gt;libmesode has finally been deprecated.
We now depend on libstrophe &amp;gt;= 0.11.0.
All the functionality from libmesode has been brought to libstrophe.&lt;/p&gt;
&lt;h2 id=&#34;plugins&#34;&gt;Plugins&lt;/h2&gt;
&lt;p&gt;We tried to make it easier to use (Python) plugins.&lt;/p&gt;
&lt;p&gt;In the process the &lt;code&gt;sourcepath&lt;/code&gt; setting got removed see &lt;a href=&#34;https://github.com/profanity-im/profanity/commit/3b3a6b7a756e0f162d212249750524b7ce045cea&#34;&gt;here&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;And we finally support a global installation path for plugins.
So now we have to ways to install a plugins. Either by using the full path:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/plugins install ~/src/profanity-plugins/my.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Or by using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;`/plugins install my.py`
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The latter will check two location. Which are the local one &lt;code&gt;~/.local/share/profanity/plugins&lt;/code&gt; and the global &lt;code&gt;/usr/local/share/profanity/plugins/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So distributions could actually create a &lt;code&gt;profanity-plugins&lt;/code&gt; package that install to the global path. Users could then install/active it by running the above mentioned install command.&lt;/p&gt;
&lt;p&gt;For more details see &lt;a href=&#34;https://github.com/profanity-im/profanity/pull/1598&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;in-band-registration&#34;&gt;In-band registration&lt;/h2&gt;
&lt;p&gt;We now support &lt;a href=&#34;https://xmpp.org/extensions/xep-0077.html&#34;&gt;XEP-0077: In-Band Registration&lt;/a&gt;.
Learn to use it via &lt;code&gt;/help register&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;ui&#34;&gt;UI&lt;/h2&gt;
&lt;p&gt;We got a new color theme, check it out: &lt;code&gt;/theme load snicket&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can now set UTF-8 signs not only for your OTR/OMEMO/PGP indicators but also for your: roster header char, roster contact char, roster resource char, roster private char, occupants char, occupants header char.&lt;/p&gt;
&lt;h2 id=&#34;user-mood&#34;&gt;User Mood&lt;/h2&gt;
&lt;p&gt;We now support &lt;a href=&#34;https://xmpp.org/extensions/xep-0107.html&#34;&gt;XEP-0107: User Mood&lt;/a&gt;.
Try it out: &lt;code&gt;/mood set happy&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;editor&#34;&gt;Editor&lt;/h2&gt;
&lt;p&gt;Additionally to &lt;code&gt;/editor&lt;/code&gt; we now have: &lt;code&gt;/subject editor&lt;/code&gt; and &lt;code&gt;/correct-editor&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can also always press alt-c to open the external editor and the result will be used in the inputwindow.
This works with every command.&lt;/p&gt;
&lt;h2 id=&#34;quoting&#34;&gt;Quoting&lt;/h2&gt;
&lt;p&gt;If you want to quote someone just type &lt;code&gt;&amp;gt;&lt;/code&gt; and then use TAB completion to cycle through the last messages. Type your reply and hit enter!&lt;/p&gt;
&lt;h2 id=&#34;contributing&#34;&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We reworked our contributions guide. New developers should now have it a lot easier.
See the &lt;a href=&#34;https://github.com/profanity-im/profanity/pull/1640&#34;&gt;PR&lt;/a&gt; and &lt;a href=&#34;https://github.com/profanity-im/profanity/blob/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;details&#34;&gt;Details&lt;/h2&gt;
&lt;p&gt;We also got several important fixes in.
For all the details please see the &lt;a href=&#34;https://github.com/profanity-im/profanity/releases/tag/0.12.0&#34;&gt;changelog&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Profanity and OpenPGP for XMPP (OX)</title>
      <link>https://profanity-im.github.io/blog/post/openpgp-for-xmpp-ox/</link>
      <pubDate>Thu, 24 Mar 2022 15:07:30 +0200</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/openpgp-for-xmpp-ox/</guid>
      <description>&lt;p&gt;We have been to implement OX in profanity. OX is
&lt;a href=&#34;https://xmpp.org/extensions/xep-0374.html&#34;&gt;XEP-0374: OpenPGP for XMPP Instant Messaging&lt;/a&gt; which
may replace &lt;a href=&#34;https://xmpp.org/extensions/xep-0027.html&#34;&gt;XEP-0027: Current Jabber OpenPGP Usage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is part of Profanity since version 0.10 but got some fixes since then.&lt;/p&gt;
&lt;p&gt;Feel free to try and test the implementation. Let us know, if you have some
issues and support the development via testing and reporting bugs.&lt;/p&gt;
&lt;p&gt;How does it works? There are some parts which will be done directly with
GnuPG. You will see those &lt;code&gt;gpg&lt;/code&gt; commands which needs to be executed in the
shell. The commands within profanity are the &lt;code&gt;/ox&lt;/code&gt; commands.&lt;/p&gt;
&lt;h1 id=&#34;generate-openpgp-key-materials&#34;&gt;Generate OpenPGP key materials&lt;/h1&gt;
&lt;p&gt;The first step is to create a OpenPGP key pair. The key pair generation
will be done with the &lt;code&gt;gpg&lt;/code&gt; command of GnuPG.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gpg --quick-generate-key xmpp:alice@domain.tld future-default default 3y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command will generated a OpenPGP key with a UID
&lt;code&gt;xmpp:alice@domain.tld&lt;/code&gt;. The option &lt;code&gt;future-default&lt;/code&gt; has been used to
generate a ed25519/cv25519 key. The expiration date will be in three
years. Replace the Jabber ID with your JID and do &lt;strong&gt;not&lt;/strong&gt; forget the URI
&lt;code&gt;xmpp:&lt;/code&gt; prefix.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pub   ed25519 2021-09-21 [SC] [verfällt: 2024-09-20]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      583BAE703A801095B6B71A56BD801174B1A0B84A
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uid                      xmpp:alice@domain.tld
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sub   cv25519 2021-09-21 [E]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;export-your-public-key&#34;&gt;Export your public key&lt;/h1&gt;
&lt;p&gt;You need to export your public key to share this public key with your
buddy. Use the command below to export public key:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gpg --export \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  --export-options export-minimal \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  --export-filter &amp;#39;keep-uid=uid =~ xmpp:alice@domain.tld&amp;#39; \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  --export-filter &amp;#39;drop-subkey=usage =~ a&amp;#39; \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  583BAE703A801095B6B71A56BD801174B1A0B84A \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;gt; /tmp/pep-key.gpg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The key will be exported to &lt;code&gt;/tmp/pep-key.gpg&lt;/code&gt;. You may check the key with
the command below:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gpg --show-key --with-sig-list /tmp/pep-key.gpg&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Keep in mind: Public keys may have some information (signatures, name,
e-mail address). Be careful which data will be exported. The
&lt;code&gt;export-options&lt;/code&gt; and &lt;code&gt;export-filter&lt;/code&gt; option of GnuPG will help you to
filter the data.&lt;/p&gt;
&lt;h1 id=&#34;publish-your-key&#34;&gt;Publish your key&lt;/h1&gt;
&lt;p&gt;You can use profanity to publish your exported key into your account (PEP).
The &lt;code&gt;/ox announce&lt;/code&gt; command will publish your key.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/ox announce /tmp/pep-key.gpg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Annonuce OpenPGP Key for OX /tmp/pep-key.gpg ... 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The command will create two PEP node records to store the key.&lt;/p&gt;
&lt;h1 id=&#34;discover-keys&#34;&gt;Discover keys&lt;/h1&gt;
&lt;p&gt;The &lt;code&gt;/ox discover&lt;/code&gt; command will be used to discover keys.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/ox discover buddy@domain.tld
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Discovering Public Key for buddy@domain.tld 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1234567890ABCDEF1234567890ABCDEF12345678
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To request and import a key, you can use the &lt;code&gt;/ox request&lt;/code&gt; command.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/ox request buddy@domain.tld 1234567890ABCDEF1234567890ABCDEF12345678
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Requesting Public Key 1234567890ABCDEF1234567890ABCDEF12345678 for buddy@domain.tld
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Public Key imported 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The key will be imported into your gnupg keyring.&lt;/p&gt;
&lt;h1 id=&#34;sign-the-imported-key&#34;&gt;Sign the imported key&lt;/h1&gt;
&lt;p&gt;The key can been shown via gpg &lt;code&gt;gpg -k xmpp:buddy@domain.tld&lt;/code&gt;.
Make sure the key is the key of your buddy and sign the key with your key.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gpg --ask-cert-level --default-key 583BAE703A801095B6B71A56BD801174B1A0B84A --sign-key 1234567890ABCDEF1234567890ABCDEF12345678
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The command &lt;code&gt;/ox contacts&lt;/code&gt; will show the keys with XMPP-UID.
The command &lt;code&gt;/ox keys&lt;/code&gt; will show all known OpenPGP keys.&lt;/p&gt;
&lt;h1 id=&#34;use-ox&#34;&gt;Use OX&lt;/h1&gt;
&lt;p&gt;Within a chat window you can start OX via &lt;code&gt;/ox start&lt;/code&gt; and stop it via &lt;code&gt;/ox end&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Messages will be send signed and encrypted.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Profanity on Pinephone</title>
      <link>https://profanity-im.github.io/blog/post/profanity-on-pinephone/</link>
      <pubDate>Wed, 02 Feb 2022 20:47:44 +0100</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/profanity-on-pinephone/</guid>
      <description>&lt;p&gt;Hi all,&lt;/p&gt;
&lt;p&gt;So far, in my pinephone I used mainly GUI applications, because I was using a touch screen. Terminal applications are not user-friendly when it comes to one-handed operation.&lt;/p&gt;
&lt;p&gt;I tested different distributions on my pinephone (mobian, manjaro, archarm), but usually most based on Phosh. In my opinion it is currently the best mobile graphics environment and stable as well.&lt;/p&gt;
&lt;p&gt;In Phosh I tested few xmpp clients:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the default application installed with Phosh is chatty, a combine that supports sms / mms / xmpp (OMEMO)&lt;/li&gt;
&lt;li&gt;Dino from &lt;a href=&#34;https://github.com/dino/dino/tree/feature/handy&#34;&gt;repo: handy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Gajim&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I know there are KDE plasma applications as well, but during my testing, plasma was unusable and I even gave up installing it. My pinephone comes with preinstalled Plasma factory image but I could not even upgrade to latest Plasma version, So I gave up KDE :(&lt;/p&gt;
&lt;p&gt;In my opinion, &lt;code&gt;Dino&lt;/code&gt; works the best on PinePhone with Phosh.&lt;/p&gt;
&lt;p&gt;Recently I ordered keyboard dedicated to pinephone(pro), so I decided that I will also test terminal xmpp client.&lt;/p&gt;
&lt;p&gt;I also decided to check profanity as I use it on my home server and it works perfectly, but I was curious how it would handle on pinephone. I installed it and everything worked well. Just one thing: pinephone terminal is small to read more than 2 lines. I wanted to scroll window Up to be able see previous content. Well, first I changed the resolution in Phosh from 200% to 150%, and I could see more than two lines.&lt;/p&gt;
&lt;p&gt;But, I still had a trouble scrolling the main window in profanity&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kraut.zone/w/6jG9F41Z7nNUZLFdHE43cN&#34;&gt;video: ppkb keyboard issue&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I looked at &lt;a href=&#34;http://www.profanity.im/keybindings.html&#34;&gt;profanity keybindings&lt;/a&gt; and in the &lt;code&gt;User Interface Navigation&lt;/code&gt; section I found that I should use &lt;code&gt;PageUp/PageDown&lt;/code&gt; keys, but looking at &lt;a href=&#34;https://wiki.pine64.org/wiki/PinePhone_(Pro)_Keyboard#Keyboard_layout&#34;&gt;Pinephone wiki&lt;/a&gt; this keyboard does not have &lt;code&gt;PageUp/PageDown&lt;/code&gt; keys.&lt;/p&gt;
&lt;p&gt;I had to do key mapping in profanity. Using following url &lt;a href=&#34;http://www.profanity.im/keybindings.html&#34;&gt;profanity keybindings&lt;/a&gt; quickly I found solution.&lt;/p&gt;
&lt;p&gt;Basicaly, I created a file &lt;code&gt;~/.config/profanity/inputrc&lt;/code&gt; with content&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ if profanity
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#34;\ C-p&amp;#34;: prof_win_prev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#34;\ C-n&amp;#34;: prof_win_next
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#34;\ C-j&amp;#34;: prof_win_pageup
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#34;\ C-k&amp;#34;: prof_win_pagedown
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#34;\ C-h&amp;#34;: prof_subwin_pageup
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#34;\ C-l&amp;#34;: prof_subwin_pagedown
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#34;\ C-y&amp;#34;: prof_win_clear
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ endif
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After starting profanity, I was able to scroll window with content using following shortcuts&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C-j&lt;/code&gt; - scroll up&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-k&lt;/code&gt; - to scroll down&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://kraut.zone/w/fA2LeeRRmonkHVB5d3NMYe&#34;&gt;video: ppkb keyboard scroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here you can see some photos.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://profanity-im.github.io/blog/blog/img/profanity-on-pinephone-screen2.png&#34; alt=&#34;Profanity screeen 1&#34;&gt;
&lt;img src=&#34;https://profanity-im.github.io/blog/blog/img/profanity-on-pinephone-screen2.png&#34; alt=&#34;Profanity screeen 2&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Profanity 0.11.0</title>
      <link>https://profanity-im.github.io/blog/post/release-0110/</link>
      <pubDate>Wed, 14 Jul 2021 00:00:00 +0100</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/release-0110/</guid>
      <description>&lt;p&gt;Six months and 242 commits after 0.10.0 we are happy to release 0.11.0.&lt;/p&gt;
&lt;p&gt;10 people contributed code to it: @DebXWoody, @xenrox, @mwuttke97, @dustinlagoy, @kaffeekanne, @CIacademic, @rjc, @raspbeguy, @Mic92 and @jubalh.&lt;/p&gt;
&lt;p&gt;Thanks to everybody who was involved, be it testing, writing documentation, updating the website or whatever you did!
I also would like to express my gratitude to my sponsors &lt;a href=&#34;https://github.com/mdosch&#34;&gt;mdosch&lt;/a&gt;, &lt;a href=&#34;https://github.com/wstrm&#34;&gt;wstrm&lt;/a&gt;, &lt;a href=&#34;https://github.com/huhndev&#34;&gt;huhndev&lt;/a&gt;, &lt;a href=&#34;https://github.com/matteobin&#34;&gt;matteobin&lt;/a&gt; and &lt;a href=&#34;https://github.com/jamesponddotco&#34;&gt;jamesponddotco&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;mam&#34;&gt;MAM&lt;/h2&gt;
&lt;p&gt;This release has experimental support for &lt;a href=&#34;https://xmpp.org/extensions/xep-0313.html&#34;&gt;XEP-0313: Message Archive Management&lt;/a&gt;.
It is not quite usable yet and we recommend that you only enable it (&lt;code&gt;/mam on&lt;/code&gt;) if you are a developer or know what you are doing.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/660&#34;&gt;issue 660&lt;/a&gt; for details.&lt;/p&gt;
&lt;h2 id=&#34;muc&#34;&gt;MUC&lt;/h2&gt;
&lt;p&gt;You can now display offline members in the occupants panel: &lt;code&gt; /occupants default show|hide [jid|offline]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Via &lt;code&gt;/affiliation request&lt;/code&gt; you can request &lt;em&gt;voice&lt;/em&gt; in MUCs.&lt;/p&gt;
&lt;p&gt;And &lt;code&gt;/affiliation register&lt;/code&gt; lets you register a nickname with a MUC.&lt;/p&gt;
&lt;p&gt;From now on Profanity will use direct messages instead of MUC Private Messages for non-anonymous MUCs.&lt;/p&gt;
&lt;h2 id=&#34;files&#34;&gt;Files&lt;/h2&gt;
&lt;p&gt;We updated &lt;a href=&#34;https://xmpp.org/extensions/xep-0363.html&#34;&gt;XEP-0363: HTTP File Upload&lt;/a&gt; to version 1.0.0 and Profanity can now also handle paths containing the &lt;code&gt;file://&lt;/code&gt; prefix.&lt;/p&gt;
&lt;h2 id=&#34;account&#34;&gt;Account&lt;/h2&gt;
&lt;p&gt;Via the freshly introduced &lt;code&gt;/changepassword&lt;/code&gt; command you can change your account password.&lt;/p&gt;
&lt;h2 id=&#34;multiline-messages&#34;&gt;Multiline messages&lt;/h2&gt;
&lt;p&gt;You can now write multiline messages via &lt;code&gt;/editor&lt;/code&gt;. This is generally handy since it will give you all the capabilities of your favourite editor. Like spell checking etc.&lt;/p&gt;
&lt;h2 id=&#34;omemo&#34;&gt;OMEMO&lt;/h2&gt;
&lt;p&gt;We introduced an omemo trustmode &lt;code&gt;/omemo trustmode manual|firstusage|blind&lt;/code&gt;. Read more about it in the manual.&lt;/p&gt;
&lt;h2 id=&#34;marking-windows&#34;&gt;Marking windows&lt;/h2&gt;
&lt;p&gt;With alt-a we can jump to all unread windows.
However sometimes we read something but don&amp;rsquo;t have time to reply. For such situations we added the ability to mark windows with an attention flag.
Press alt-f to toggle the flag and use alt-m to switch to marked windows. Use &lt;code&gt;/wins attention&lt;/code&gt; to list them in the console.&lt;/p&gt;
&lt;h2 id=&#34;call-notice&#34;&gt;Call notice&lt;/h2&gt;
&lt;p&gt;When someone tries to call via &lt;a href=&#34;https://xmpp.org/extensions/xep-0353.html&#34;&gt;XEP-0353: Jingle Message Initiation&lt;/a&gt; we now display a message in the console.&lt;/p&gt;
&lt;h2 id=&#34;server-contact-information&#34;&gt;Server contact information&lt;/h2&gt;
&lt;p&gt;We now implement the lookup of server contact information according to &lt;a href=&#34;https://xmpp.org/extensions/xep-0157.html&#34;&gt;XEP-0157&lt;/a&gt;. Use &lt;code&gt;/disco info&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;spam&#34;&gt;Spam&lt;/h2&gt;
&lt;p&gt;You can now report spam according to &lt;a href=&#34;https://xmpp.org/extensions/xep-0377.html&#34;&gt;XEP-0377: Spam Reporting&lt;/a&gt; via &lt;code&gt;/blocked report abuse|spam &amp;lt;jid&amp;gt; &amp;lt;message&amp;gt;&lt;/code&gt; to your server admin.&lt;/p&gt;
&lt;p&gt;In case you just don&amp;rsquo;t want to get ANY messages at all from people that you don&amp;rsquo;t have subscribed to in your roster then you can use &lt;code&gt;/silence on&lt;/code&gt;.
Use this with care though since generally we want people to be able to contact us in instant messaging :-).&lt;/p&gt;
&lt;h2 id=&#34;details&#34;&gt;Details&lt;/h2&gt;
&lt;p&gt;We also added plenty of fixes. To read up on those and further details, please check the &lt;a href=&#34;https://github.com/profanity-im/profanity/releases/tag/0.11.0&#34;&gt;changelog&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Attention, attention!</title>
      <link>https://profanity-im.github.io/blog/post/attention-attention/</link>
      <pubDate>Sat, 05 Jun 2021 15:07:30 +0200</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/attention-attention/</guid>
      <description>&lt;p&gt;Hello folks,&lt;/p&gt;
&lt;p&gt;we have implemented an attention flag in profanity.&lt;/p&gt;
&lt;p&gt;The attention flag can be used to mark chats and groupchats where you would like to
pay particular attention.&lt;/p&gt;
&lt;p&gt;This is only available on master, but will be in the next release (0.11.0).&lt;/p&gt;
&lt;h1 id=&#34;how-it-works&#34;&gt;How it works&lt;/h1&gt;
&lt;p&gt;Open the chat or groupchat window and press shortcut &lt;code&gt;ALT+F&lt;/code&gt;. Profanity will
display a line to inform you when the attention flag has been activated and
deactivated.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;05/06/21 15:25:49 - Staff restaurant: Lunch recommendations:
05/06/21 15:27:04 ! Attention flag has been activated
05/06/21 15:27:04 ! Attention flag has been deactivated
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can use the shortcut &lt;code&gt;ALT+F&lt;/code&gt; to toggle the flag.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;/wins attention&lt;/code&gt; command can be used to display all windows with you pay
attention.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;15:38:19 - 3: Room roomA@conference.domain.tld
15:38:19 - 15: Room roomB@conference.server.tld, 1 unread
15:38:19 - 28: Room roomC@chat.server.tld
15:38:19 - 29: Room roomD@chat.server.tld, 3 unread
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can just circle around the marked windows with shortcut &lt;code&gt;ALT+M&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Profanity 0.10.0</title>
      <link>https://profanity-im.github.io/blog/post/release-0100/</link>
      <pubDate>Sat, 09 Jan 2021 00:00:00 +0100</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/release-0100/</guid>
      <description>&lt;p&gt;Six months and 270 commits after 0.9.5 we are happy to release &lt;a href=&#34;https://github.com/profanity-im/profanity/releases/tag/0.10.0&#34;&gt;0.10.0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;10 people contributed code to it: @wstrm, @DebXWoody, @pasis, @Niacat, @kaffeekanne,
@timgates42, @spth, @licaon-kter, @misaflo and @jubalh.&lt;/p&gt;
&lt;p&gt;Thanks to everybody who was involved, be it testing, writing documentation, updating the website or whatever you did!
I also would like to express my gratitude to my sponsors &lt;a href=&#34;https://github.com/mdosch&#34;&gt;mdosch&lt;/a&gt;, &lt;a href=&#34;https://github.com/wstrm&#34;&gt;wstrm&lt;/a&gt; and &lt;a href=&#34;https://github.com/huhndev&#34;&gt;huhndev&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;dependencies&#34;&gt;Dependencies&lt;/h2&gt;
&lt;p&gt;This release bumped a few dependencies. Namely: libstrophe/libmesode &amp;gt;= 0.10.0, glib &amp;gt;= 2.62 sqlite &amp;gt;= 3.22 and gtk3 &amp;gt;= 3.24 (or gtk2 &amp;gt;= 2.24.10).&lt;/p&gt;
&lt;h2 id=&#34;roadmap&#34;&gt;Roadmap&lt;/h2&gt;
&lt;p&gt;The roadmap for 0.10.0 was announced on our &lt;a href=&#34;https://lists.notraces.net/pipermail/profanity/2020/000018.html&#34;&gt;mailing list&lt;/a&gt;. The goal was mainly cleanupg and fixes.&lt;/p&gt;
&lt;h2 id=&#34;contributing-to-profanity&#34;&gt;Contributing to Profanity&lt;/h2&gt;
&lt;p&gt;To make it easier for newcomers to contribue to Profanity we added a &lt;a href=&#34;https://github.com/profanity-im/profanity/blob/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; file which has, as we hope, some quite important information on how to get started. And about our workflow.&lt;/p&gt;
&lt;h2 id=&#34;netbsd&#34;&gt;NetBSD&lt;/h2&gt;
&lt;p&gt;It is also the first official Proanity release that got NetBSD support.&lt;/p&gt;
&lt;h2 id=&#34;omemo&#34;&gt;OMEMO&lt;/h2&gt;
&lt;p&gt;You can now sent OMEMO encrypted files via &lt;code&gt;/sendfile&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;details&#34;&gt;Details&lt;/h2&gt;
&lt;p&gt;For details look at the &lt;a href=&#34;https://github.com/profanity-im/profanity/releases/tag/0.10.0&#34;&gt;changelog&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OMEMO</title>
      <link>https://profanity-im.github.io/blog/post/omemo/</link>
      <pubDate>Fri, 27 Nov 2020 17:14:07 +0100</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/omemo/</guid>
      <description>&lt;p&gt;OMEMO with profanity.&lt;/p&gt;
&lt;h3 id=&#34;hello-omemo&#34;&gt;Hello OMEMO!&lt;/h3&gt;
&lt;p&gt;OMEMO needs crytographic materials. You can generated this crytographic
materials via &lt;code&gt;/omemo gen&lt;/code&gt;.  If you have more than one device, make sure you are
trusting your other devices.  Check your fingerprints via &lt;code&gt;/omemo fingerprint&lt;/code&gt;.
You may wont trust all your devices:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/omemo trust &amp;lt;Your XMPP-ID&amp;gt; &amp;lt;Your fingerpint&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Check the fingerprint of your buddy. List the fingerprints of your buddy via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/omemo fingerprint &amp;lt;XMPP-ID of your buddy&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Check the fingerprints with you buddy over a secure medium (phone or singed OpenPGP message)
and trust the buddy&amp;rsquo;s fingerprint via the command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/omemo trust &amp;lt;Buddy&amp;#39;s XMPP-ID&amp;gt; &amp;lt;Buddy&amp;#39;s fingerpint&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can start a OMEMO Session via the omemo-start command &lt;code&gt;/omemo start &amp;lt;buddy&#39;s XMPP-ID&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;debugging&#34;&gt;Debugging&lt;/h3&gt;
&lt;p&gt;Get the device list of your Buddy. Change the &lt;code&gt;to&lt;/code&gt; and the &lt;code&gt;from&lt;/code&gt; tag of the
line shown below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;iq type=&amp;#39;get&amp;#39; from=&amp;#39;your@domain.tld&amp;#39; to=&amp;#39;buddy@domain.tld&amp;#39; id=&amp;#39;getOmemoDeviceList&amp;#39;&amp;gt;&amp;lt;pubsub xmlns=&amp;#39;http://jabber.org/protocol/pubsub&amp;#39;&amp;gt;&amp;lt;items node=&amp;#39;eu.siacs.conversations.axolotl.devicelist&amp;#39;/&amp;gt;&amp;lt;/pubsub&amp;gt;&amp;lt;/iq&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Use the &lt;code&gt;/xmlconsole&lt;/code&gt; to open the XMP Console Window and sent those line to your
server.&lt;/p&gt;
&lt;p&gt;The Server should return a result of the &lt;code&gt;iq&lt;/code&gt; with id &lt;code&gt;getOmemoDeviceList&lt;/code&gt;.
There should be a &lt;code&gt;item&lt;/code&gt;-Tag with the id &lt;code&gt;current&lt;/code&gt; followed by a list of device
id.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;items node=&amp;#34;eu.siacs.conversations.axolotl.devicelist&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;item id=&amp;#34;current&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;list xmlns=&amp;#34;eu.siacs.conversations.axolotl&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;device id=&amp;#34;174235744&amp;#34;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;device id=&amp;#34;71071234&amp;#34;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;device id=&amp;#34;22318128&amp;#34;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;/list&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;/item&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/items&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The known devices and fingerprints are stored in &lt;code&gt;~/.local/share/profanity/omemo/&amp;lt;account&amp;gt;/known_devices.txt&lt;/code&gt;.
The trust information are stored in &lt;code&gt;~/.local/share/profanity/omemo/&amp;lt;account&amp;gt;/trust.txt&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;qr-code&#34;&gt;QR Code&lt;/h3&gt;
&lt;p&gt;If you need a QR Code of you Fingerprint, check xmppc.
xmppc is a XMPP Command Line Tool which can be used to &lt;a href=&#34;https://codeberg.org/Anoxinon_e.V./xmppc/wiki/Usage#user-content-omemo&#34;&gt;generate a QR
Code&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Profanity 0.9.0</title>
      <link>https://profanity-im.github.io/blog/post/release-090/</link>
      <pubDate>Tue, 09 Jun 2020 14:46:08 +0100</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/release-090/</guid>
      <description>&lt;p&gt;Four months and 350 commits after 0.8.1 we are happy to release &lt;a href=&#34;https://github.com/profanity-im/profanity/releases/tag/0.9.0&#34;&gt;0.9.0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;7 people contributed code to it: &lt;a href=&#34;https://github.com/pasis&#34;&gt;pasis&lt;/a&gt;, &lt;a href=&#34;https://github.com/wstrm&#34;&gt;wstrm&lt;/a&gt;, &lt;a href=&#34;https://github.com/DebXWoody&#34;&gt;DebXWoody&lt;/a&gt;, &lt;a href=&#34;https://github.com/toogley&#34;&gt;toogley&lt;/a&gt;, &lt;a href=&#34;https://github.com/pmaziere&#34;&gt;pmaziere&lt;/a&gt;, &lt;a href=&#34;https://github.com/moppman&#34;&gt;moppman&lt;/a&gt; and &lt;a href=&#34;https://github.com/jubalh&#34;&gt;jubalh&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks to everybody who was involved, be it testing, writing documentation, updating the website or whatever you did!
I also would like to express my gratitude to my sponsors &lt;a href=&#34;https://github.com/mdosch&#34;&gt;mdosch&lt;/a&gt; and &lt;a href=&#34;https://github.com/wstrm&#34;&gt;wstrm&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://profanity-im.github.io/blog/blog/img/profanity-rel-090.png&#34; alt=&#34;Profanity&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;lmc&#34;&gt;LMC&lt;/h2&gt;
&lt;p&gt;We support &lt;a href=&#34;https://xmpp.org/extensions/xep-0308.html&#34;&gt;XEP-0308: Last Message Correction&lt;/a&gt; now.
Enable it with &lt;code&gt;/correction on&lt;/code&gt;. If you mistyped a word just type &lt;code&gt;/correct&lt;/code&gt; and hit tab to autocomplete the last sent message, then fix it and press enter.&lt;/p&gt;
&lt;h2 id=&#34;slashguard&#34;&gt;Slashguard&lt;/h2&gt;
&lt;p&gt;In our MUC we often see messages like &amp;ldquo;q/uit&amp;rdquo; or people having whitespaces before a command &amp;quot; /quit&amp;quot;.
To help you to avoid such mistakes we introduce slashguard.
Once enabled (&lt;code&gt;/slashguard on&lt;/code&gt;) Profanity won&amp;rsquo;t send messages that contain a slash in the first four letters.&lt;/p&gt;
&lt;h2 id=&#34;new-parameters&#34;&gt;New parameters&lt;/h2&gt;
&lt;p&gt;You can specify a logfile upon startup via the new &lt;code&gt;-f&lt;/code&gt; option:
&lt;code&gt;profanity -f TEST&lt;/code&gt; will log to &lt;code&gt;~/.local/share/profanity/logs/TEST.log&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Hopefully this is useful for our testers!&lt;/p&gt;
&lt;p&gt;The new &lt;code&gt;-t&lt;/code&gt; option will let you select a theme right at startup: &lt;code&gt;/profanity -t bios&lt;/code&gt;.
This is useful if you run multiple instances of Profanity. Maybe you have multiple accounts and want to visually destinguish between them.&lt;/p&gt;
&lt;p&gt;Did you know we have a &lt;a href=&#34;https://profanity-im.github.io/blog/post/how-to-run-profanity-instances-within-tmux/&#34;&gt;blogpost&lt;/a&gt; that should help you create such a setup with tmux?&lt;/p&gt;
&lt;h2 id=&#34;titlebar&#34;&gt;Titlebar&lt;/h2&gt;
&lt;p&gt;Previously you could choose whether to display the MUC name or MUC title in the titlebar. Now you can choose to do both or neither.
&lt;code&gt;/titlebar use name|jid&lt;/code&gt; became &lt;code&gt;/titlebar show|hide name|jid&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;what-software-is-this-server-running&#34;&gt;What software is this server running?&lt;/h2&gt;
&lt;p&gt;You can now use XEP-0092 not just to request client software information but also server software information.
Use &lt;code&gt;/serversoftware domain.org&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;theming&#34;&gt;Theming&lt;/h2&gt;
&lt;p&gt;You can now colorize your trackbar by using &lt;code&gt;main.trackbar&lt;/code&gt; in your theme.&lt;/p&gt;
&lt;p&gt;And you can use UTF-8 symbols as your OMEMO char.&lt;/p&gt;
&lt;p&gt;You can now choose not to colorize your own nick if you enabled XEP-0392.
Use &lt;code&gt;/color own off&lt;/code&gt; if you want consistent color generation for everybody else but not for yourself.&lt;/p&gt;
&lt;p&gt;MUC history messages were colored in one uniform color (grey by default). Many users would just like to get the same coloring and hilighting for freshly received messages. So we removed the uniform color feature &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1261&#34;&gt;#1261&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And there is a new theme based on default: jubalian. Check it out ;)&lt;/p&gt;
&lt;h2 id=&#34;avatars&#34;&gt;Avatars&lt;/h2&gt;
&lt;p&gt;Avatars can not only be downloaded but also opened automatically now.
In 0.8.x you used &lt;code&gt;/avatar odin@valhalla.org&lt;/code&gt;.
Now you can either just download it &lt;code&gt;/avatar get odin@valhalla.org&lt;/code&gt; or open it: &lt;code&gt;/avatar open odin@valhalla.org&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By default we rely on xdg-open, so your default image viewer will be used.
But you can choose to configure it yourself. For example to use &lt;code&gt;feh&lt;/code&gt; instead: &lt;code&gt;/executable avatar feh&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;open-urls&#34;&gt;Open URLs&lt;/h2&gt;
&lt;p&gt;People often had issues with URLs that were too long and then broken into several lines. If they were in a MUC and had the occupants panel enabled, this made it impossible to click on the URL to open it because it was not one consecutive string.&lt;/p&gt;
&lt;p&gt;If you run Profanity locally (not on a remote machine where you log in via ssh) you can use use &lt;code&gt;/urlopen&lt;/code&gt; to open an URL in your browser.&lt;/p&gt;
&lt;p&gt;We use xdg-open again. But you can configure it with &lt;code&gt;/executable urlopen firefox&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;omemo&#34;&gt;OMEMO&lt;/h2&gt;
&lt;p&gt;OMEMO autocompletion had some quirks. We fixed them!
We also stopped requesting the device list in non anon MUCs.&lt;/p&gt;
&lt;h2 id=&#34;scrolling&#34;&gt;Scrolling&lt;/h2&gt;
&lt;p&gt;Sometimes it happened that you scroll up a window to read up on something. Then switch to another application and later forget that you actually scrolled up. Why is noone saying anything in this MUC anymore?&lt;/p&gt;
&lt;p&gt;In this version of Profanity we display a hint in the titlebar if a window is scrolled. Use &lt;code&gt;titlebar.scrolled&lt;/code&gt; to theme it.&lt;/p&gt;
&lt;h2 id=&#34;legacy-authentication&#34;&gt;Legacy authentication&lt;/h2&gt;
&lt;p&gt;Some servers still only allow legacy authentication &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1236&#34;&gt;#1236&lt;/a&gt;.
If you want to connect to them you will need libstrophe 0.9.3 and Profanity 0.9.0.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;/connect &amp;lt;account&amp;gt; [auth default|legacy]&lt;/code&gt; or &lt;code&gt;/account &amp;lt;account&amp;gt; set auth default|legacy&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;too-many-tabs&#34;&gt;Too many tabs&lt;/h2&gt;
&lt;p&gt;In case you many opened windows you might want to only display the ones that have something going on in them.
Use &lt;code&gt;/statusbar show|hide read&lt;/code&gt; to configure this to your liking.&lt;/p&gt;
&lt;h2 id=&#34;bookmarks&#34;&gt;Bookmarks&lt;/h2&gt;
&lt;p&gt;We now print the boomark names when using &lt;code&gt;/bookmark list&lt;/code&gt;. You can also now add a name when using &lt;code&gt;/bookmark add&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Gajim uses a custom way to save whether (autojoined) bookmarks should be minimized. When we updated a bookmark in Profanity we didn&amp;rsquo;t respect this flag and it was overwritten. Now Profanity works nicer with Gajim &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1326&#34;&gt;#1326&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you use multiple clients you probalby have some MUCs that you want to join on all devices. You use the autojoin flag for these cases.
If you want to ignore the autojoin flag in a Profanity instance you can use &lt;code&gt;/bookmark ignore&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;narrow-terminals&#34;&gt;Narrow terminals&lt;/h2&gt;
&lt;p&gt;We can&amp;rsquo;t support all edge cases and users will need to have a reasonable window size to use Profanity properly.
We fixed a bug about a messed up titlebar if a user had a very long resource name &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/715&#34;&gt;#715&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;change-in-default-settings&#34;&gt;Change in default settings&lt;/h2&gt;
&lt;p&gt;To give a better experience to new users we changed the default settings for some popular features.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Allow message correction&lt;/li&gt;
&lt;li&gt;Send receipts&lt;/li&gt;
&lt;li&gt;Enable carbons&lt;/li&gt;
&lt;li&gt;Enable type/chat states&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;under-the-hood&#34;&gt;Under the hood&lt;/h2&gt;
&lt;p&gt;Plenty of memory leaks where discovered and fixed. Profanity should run a lot smoother now.
The UI and message functions were cleaned up in preparation to add MAM support.&lt;/p&gt;
&lt;p&gt;Messages are now logged in an sqlite database which is located at &lt;code&gt;~/.local/share/profanity/database/accountname/chatlog.db&lt;/code&gt;.
All later retrieval (history) is done using this database from now on. We still output regular chat logs in &lt;code&gt;~/.local/share/profanity/chatlogs&lt;/code&gt; if the user enabled it (&lt;code&gt;/loggin chat|group on&lt;/code&gt;) but don&amp;rsquo;t rely on them anymore. They are just for the users convenience.&lt;/p&gt;
&lt;p&gt;This will also benefit us when implementing message searching &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/206&#34;&gt;#206&lt;/a&gt; or MAM &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/660&#34;&gt;#660&lt;/a&gt; for example.&lt;/p&gt;
&lt;p&gt;We always send delivery receipts and not just if the other client advertises it &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1268&#34;&gt;#1268&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some users experienced connectivity problems. Several things were done by DebXWoody to improve this.&lt;/p&gt;
&lt;p&gt;We also had an edge case where the roster only displayed offline contacts because we received the presence after the roster.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New mailing list</title>
      <link>https://profanity-im.github.io/blog/post/new-mailing-list/</link>
      <pubDate>Sun, 19 Apr 2020 22:50:18 +0200</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/new-mailing-list/</guid>
      <description>&lt;p&gt;I would like to announce that thanks to &lt;a href=&#34;https://github.com/toogley&#34;&gt;toogley&lt;/a&gt; we have a new mailing list.
You can register on &lt;a href=&#34;https://lists.notraces.net/mailman/listinfo/profanity&#34;&gt;https://lists.notraces.net/mailman/listinfo/profanity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The list is hosted by &lt;a href=&#34;https://www.datenkollektiv.net/&#34;&gt;datenkollektiv&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Contributing a Patch via GitHub</title>
      <link>https://profanity-im.github.io/blog/post/contributing-a-patch-via-github/</link>
      <pubDate>Wed, 15 Apr 2020 13:50:25 +0200</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/contributing-a-patch-via-github/</guid>
      <description>&lt;p&gt;Several people mentioned in our MUC that they have problems contributing code to the Profanity repo on GitHub because &amp;ldquo;forking all the time is cumbersome&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Let me show you an example workflow. Since I don&amp;rsquo;t think it&amp;rsquo;s cumbersome at all.
I assume you have an account on &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt; and are logged in.
First thing we do is fork the repo. So go to &lt;a href=&#34;https://github.com/profanity-im/profanity&#34;&gt;https://github.com/profanity-im/profanity&lt;/a&gt; and click on &amp;ldquo;Fork&amp;rdquo;.
Now you should be at your fork, in my case this is: &lt;a href=&#34;https://github.com/jubalh/profanity/&#34;&gt;https://github.com/jubalh/profanity/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s go into our developtment directory: &lt;code&gt;cd dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now you clone our repo: &lt;code&gt;https://github.com/profanity-im/profanity/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Change to the directory and check out a branch: &lt;code&gt;cd profanity; git checkout -b fix/typo-in-readme&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add our own fork: &lt;code&gt;git remote add mine https://github.com/jubalh/profanity&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Make a change: &lt;code&gt;$EDITOR README.md&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Commit your change: &lt;code&gt;git add README.md ; git commit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And push the change to our forked repo: &lt;code&gt;git push mine&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In the browser go to &lt;a href=&#34;https://github.com/jubalh/profanity&#34;&gt;https://github.com/jubalh/profanity&lt;/a&gt; again and click on &amp;ldquo;Pull Request&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Write some nice text there.&lt;/p&gt;
&lt;p&gt;A couple of days later you want to contribute something else.&lt;/p&gt;
&lt;p&gt;So we go to our sources: &lt;code&gt;cd dev/profanity&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Pull the latest changes from master, hopefully including our own changes in case they got merged:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git checkout master; git pull&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And then we do the same like before. We check out a new branch, we do our commits there. We push them.
So this is the same like one wouldn&amp;rsquo;t use GitHub but git in general.
The only thing that is &amp;ldquo;more work&amp;rdquo; is to go to the website and create a pull request.
The &amp;ldquo;forking&amp;rdquo; actually only happens once.&lt;/p&gt;
&lt;p&gt;If you don&amp;rsquo;t like browsers, you can use something like &lt;a href=&#34;https://hub.github.com/&#34;&gt;hub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>XML console in Profanity</title>
      <link>https://profanity-im.github.io/blog/post/xml-console-in-profanity/</link>
      <pubDate>Thu, 09 Apr 2020 21:16:34 +0300</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/xml-console-in-profanity/</guid>
      <description>&lt;p&gt;Profanity is an XMPP client that allows you to chat with friends. But one
feature makes it more than just a client. The name is XML console.&lt;/p&gt;
&lt;p&gt;It has been implemented for a long time now, but hasn&amp;rsquo;t found wide spread within
Profanity community. I still believe that the XML console is unpopular because
users haven&amp;rsquo;t chance to find it and to try it out. And Profanity community has
a number of experts who use XMPP in their projects. If you&amp;rsquo;re one of them,
Profanity can make life easier for you.&lt;/p&gt;
&lt;p&gt;XMPP clients implement an XML console mostly for debugging purpose. To see XMPP
stream and analyze issues post factum. But Profanity has gone further and
implemented XML console with ability to send any data. One this small property
turned Profanity into a powerful developer tool. Let&amp;rsquo;s see how to use it:&lt;/p&gt;
&lt;p&gt;To open the XML console, simply run command: &lt;code&gt;/xmlconsole&lt;/code&gt;. It opens a new
window with content of XMPP stream. Profanity starts displaying only new XMPP
stanzas. You won&amp;rsquo;t see the part of XMPP stream before you open the window.
Format of the content is as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;21:24 - SENT:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;21:24 - &amp;lt;iq id=&amp;#34;id1&amp;#34; type=&amp;#34;get&amp;#34;&amp;gt;&amp;lt;ping xmlns=&amp;#34;urn:xmpp:ping&amp;#34;/&amp;gt;&amp;lt;/iq&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;21:24 -
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;21:24 - RECV:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;21:24 - &amp;lt;iq id=&amp;#34;id1&amp;#34; to=&amp;#34;pasis@jabber.ua/profanity.754a&amp;#34; type=&amp;#34;result&amp;#34;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;21:24 -
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Any text you send in the window is inserted into XMPP stream as is. So, you can
simply type a stanza, press enter and observe server behaviour. Why is it so
cool? Because you don&amp;rsquo;t have to write any code while you learn a XEP or server
behaviour.&lt;/p&gt;
&lt;p&gt;For example, you&amp;rsquo;ve decided to implement roster support with a low-level
library like libstrophe. Instead of debugging with writing code, printing
text to terminal or logs, you can connect to your server with Profanity and
type in the XML console:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;iq type=&amp;#34;get&amp;#34; id=&amp;#34;id2&amp;#34;&amp;gt;&amp;lt;query xmlns=&amp;#34;jabber:iq:roster&amp;#34;/&amp;gt;&amp;lt;/iq&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, you can observe what server replies in practice. In this way, you can
debug process which requires multiple iterations.&lt;/p&gt;
&lt;p&gt;Hint: if you type a stanza without child element, don&amp;rsquo;t forget to close the tag!
Pay attention to the &amp;ldquo;query&amp;rdquo; stanza in the above example - it has &amp;lsquo;/&amp;rsquo; before
closing tag.&lt;/p&gt;
&lt;p&gt;And even you send something wrong, server will close connection and Profanity
will reconnect automatically. So, this is much faster than rewriting your code.&lt;/p&gt;
&lt;p&gt;To demonstrate a different usecase, let&amp;rsquo;s refer to XEP-0363. After requesting
a slot with an IQ stanza, you can upload file using curl command-line tool.
Again, no need to write any code for debugging.&lt;/p&gt;
&lt;p&gt;Hope you will find this feature useful for you!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to run profanity instances within tmux</title>
      <link>https://profanity-im.github.io/blog/post/how-to-run-profanity-instances-within-tmux/</link>
      <pubDate>Tue, 03 Mar 2020 14:49:55 +0100</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/how-to-run-profanity-instances-within-tmux/</guid>
      <description>&lt;p&gt;If you have more than one XMPP account, you may run one profanity process per
account. For example &lt;code&gt;profanity -a AccountName&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s possible to start a tmux session with one window for each
profanity instance.&lt;/p&gt;
&lt;p&gt;Create a tmux configuration file, e.g. in &lt;code&gt;~/.config/tmux&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir ~/.config/tmux
touch ~/.config/tmux/profanity.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Within the configuration file, you create a tmux session named &lt;code&gt;Profanity&lt;/code&gt;.
Followed by one window per XMPP Account. Each window will run a profanity
followed by &lt;code&gt;-a accountname&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;session-name Profanity
neww -n &amp;quot;Private&amp;quot; profanity -a private 
neww -n &amp;quot;Work&amp;quot; profanity -a work
neww -n &amp;quot;Movim&amp;quot; profanity -a Movim
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are using bash, you may like to define a alias in &lt;code&gt;~/.bash_aliases&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alias profanitymux=&#39;tmux new-session &amp;quot;tmux source-file ~/.config/tmux/profanity.conf&amp;quot;&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Done! You can start your profanity instances within a tmux session by running
&lt;code&gt;profanitymux&lt;/code&gt;. tmux will create one window for each profanity instance. You can
switch the
tmux windows with CTRL-B + 1 or CTRL-B + 2,&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Last Message Correction</title>
      <link>https://profanity-im.github.io/blog/post/lmc/</link>
      <pubDate>Fri, 14 Feb 2020 11:34:38 +0100</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/lmc/</guid>
      <description>&lt;p&gt;From 10th to 14th February 2020 we had &lt;a href=&#34;https://hackweek.suse.com/19/projects&#34;&gt;Hackweek 19&lt;/a&gt; at SUSE.
Part of that time I used to finally implement the long (since 2016!) &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/805&#34;&gt;sought after&lt;/a&gt; Last Message Correction feature, aka &lt;a href=&#34;https://xmpp.org/extensions/xep-0308.html&#34;&gt;XEP-0308&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See my &lt;a href=&#34;https://hackweek.suse.com/projects/implement-xep-0308-last-message-correction-in-profanity&#34;&gt;Hackweek project&lt;/a&gt; and the corresponding &lt;a href=&#34;https://github.com/profanity-im/profanity/pull/1267&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;p&gt;To enable incoming and outgoing corrections users need to enable it with &lt;code&gt;/correction on&lt;/code&gt;, see &lt;code&gt;/help correction&lt;/code&gt; for more details.&lt;/p&gt;
&lt;p&gt;Now we write a message to a friend &lt;code&gt;/msg Martin Hey therr!&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ouch! Already a typo.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s make this right: &lt;code&gt;/corr&amp;lt;TAB&amp;gt; &amp;lt;TAB&amp;gt;&lt;/code&gt; will autocomplete to &lt;code&gt;/correct Hey therr!&lt;/code&gt; which then can easily be fixed and re-send.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://profanity-im.github.io/blog/blog/img/prof-lmc-wrong.png&#34; alt=&#34;mistake&#34;&gt;
&lt;img src=&#34;https://profanity-im.github.io/blog/blog/img/prof-lmc-corrected.png&#34; alt=&#34;corrected&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;details&#34;&gt;Details&lt;/h2&gt;
&lt;p&gt;The feature is only available in the development version of Profanity. In the master branch on git.
So it&amp;rsquo;s not yet ready for release.&lt;/p&gt;
&lt;p&gt;Master branch corresponds always to our development and doesn&amp;rsquo;t guarantee anything. It&amp;rsquo;s where we develop test and experiment.
We write these blogposts from time to time to inform our users and sponsors about what we are currently working on.&lt;/p&gt;
&lt;p&gt;The LMC feature is in there. But for the correct behaviour we need to rewrite the UI code. We could hack a &amp;lsquo;from&amp;rsquo; field in but we want to think more carefully how to implement it nicely.
For this reason in the current state we don&amp;rsquo;t check the &amp;lsquo;from&amp;rsquo; attribute of the sender. Because at the time of drawing so far we don&amp;rsquo;t have this information.&lt;/p&gt;
&lt;p&gt;Since LMC is off by default noone is at harm. But people who choose to enable it need to be aware that in theory it would be possible for other users to send special messages where they could &amp;ldquo;correct&amp;rdquo; a message of someone else. We think the damage and likeliness from this is quite low. And once again, this is only in our development version of Profanity.&lt;/p&gt;
&lt;h2 id=&#34;done&#34;&gt;Done!&lt;/h2&gt;
&lt;p&gt;Today, on 2020-03-09, we were able to finish LMC properly. So if you use master from &lt;a href=&#34;https://github.com/profanity-im/profanity/commit/a23d4e4af7c10f6762577940a12983903bf4428d&#34;&gt;a23d4e4af7c10f6762577940a12983903bf4428d&lt;/a&gt; you are good.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Profanity 0.8.0</title>
      <link>https://profanity-im.github.io/blog/post/release-080/</link>
      <pubDate>Mon, 03 Feb 2020 14:46:08 +0100</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/release-080/</guid>
      <description>&lt;p&gt;On 2012-02-02 the first commit to Profanity was done by &lt;a href=&#34;https://github.com/boothj5&#34;&gt;@boothj5&lt;/a&gt;.
So now Profanity is already 8 years old! Happy Birthday!&lt;/p&gt;
&lt;p&gt;As a present we release today the next version: &lt;a href=&#34;https://github.com/profanity-im/profanity/releases/tag/0.8.0&#34;&gt;0.8.0&lt;/a&gt;!
It&amp;rsquo;s released five months after 0.7.0 and has 295 commits since then.&lt;/p&gt;
&lt;p&gt;Also more and more people contribute to Profanity&amp;rsquo;s development. A big thanks to:
&lt;a href=&#34;https://github.com/paulfariello&#34;&gt;@paulfariello&lt;/a&gt;, &lt;a href=&#34;https://github.com/svensp&#34;&gt;@svensp&lt;/a&gt;, &lt;a href=&#34;https://github.com/aaptel&#34;&gt;@aaptel&lt;/a&gt;, &lt;a href=&#34;https://github.com/&#34;&gt;@aszlig&lt;/a&gt;, &lt;a href=&#34;https://github.com/mdosch&#34;&gt;@mdosch&lt;/a&gt;, &lt;a href=&#34;https://github.com/pasis&#34;&gt;@pasis&lt;/a&gt;, &lt;a href=&#34;https://github.com/mzagozen&#34;&gt;@mzagozen&lt;/a&gt;, &lt;a href=&#34;https://github.com/quite&#34;&gt;@quite&lt;/a&gt;, &lt;a href=&#34;https://github.com/weiss&#34;&gt;@weiss&lt;/a&gt;, &lt;a href=&#34;https://github.com/Misaflo&#34;&gt;@Misaflo&lt;/a&gt; and &lt;a href=&#34;https://github.com/&#34;&gt;@jubalh&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://profanity-im.github.io/blog/blog/img/profanity-rel-080.jpeg&#34; alt=&#34;Profanity&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;new-features&#34;&gt;New features&lt;/h2&gt;
&lt;p&gt;We got fingerprint autocompletion for the &lt;code&gt;/omemo trust&lt;/code&gt; command.   &lt;br&gt;
We got a gruvbox and solarized theme.&lt;/p&gt;
&lt;h2 id=&#34;muc-name-display&#34;&gt;MUC name display&lt;/h2&gt;
&lt;p&gt;You can now decide whether you want to have the MUCs name or JID displayed in the titlebar and roster:
See &lt;code&gt;/titlebar use [name|jid]&lt;/code&gt; and &lt;code&gt;/roster room use name&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;avatars&#34;&gt;Avatars&lt;/h2&gt;
&lt;p&gt;Profanity is now able to download user avatars via XEP-0084 &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1240&#34;&gt;#1240&lt;/a&gt;.
Use the &lt;code&gt;/avatar &amp;lt;jid&amp;gt;&lt;/code&gt; command. And open it with &lt;code&gt;xdg-open ~/.local/share/profanity/avatars/&amp;lt;jid&amp;gt;.png&lt;/code&gt; from your terminal.&lt;/p&gt;
&lt;h2 id=&#34;trackbar&#34;&gt;Trackbar&lt;/h2&gt;
&lt;p&gt;A trackbar was added so you can easily see where you last left off reading. &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1238&#34;&gt;#1238&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;consistent-color-generation-for-nicks&#34;&gt;Consistent Color Generation for nicks&lt;/h2&gt;
&lt;p&gt;We gained support for XEP-0392 Consistent Color Generation for nicks &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1191&#34;&gt;#1191&lt;/a&gt;.
See &lt;code&gt;/color&lt;/code&gt;, &lt;code&gt;/occupants color&lt;/code&gt;, &lt;code&gt;/roster color&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;save-current-line&#34;&gt;Save current line&lt;/h2&gt;
&lt;p&gt;Add option to store current line in history (like irssi down arrow behaviour) &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/200&#34;&gt;#200&lt;/a&gt;.
Imagine you write a long line of text, only to find out someone else wrote something where you want to reply first.
Now you can press alt+down-arrow to save the current line. Write a new one. Send it. And press arrow-up to get the saved line back from history.&lt;/p&gt;
&lt;h2 id=&#34;highlight-unread-messages&#34;&gt;Highlight unread messages&lt;/h2&gt;
&lt;p&gt;You can now highlight unread messages with a different color in /wins &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/895&#34;&gt;#895&lt;/a&gt;.
New theming option is &lt;code&gt;cmd.wins.unread&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;switch-to-unread-messages&#34;&gt;Switch to unread messages&lt;/h2&gt;
&lt;p&gt;A keyboard shortcut to select the next window with unread messages has been added: alt+a &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1114&#34;&gt;#1114&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;switch-to-windows&#34;&gt;Switch to windows&lt;/h2&gt;
&lt;p&gt;You can now switch to the first 20 open windows with alt + 1234567890qwertyuio instead of only the first 10 &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1114&#34;&gt;#1114&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;reload-command&#34;&gt;Reload command&lt;/h2&gt;
&lt;p&gt;A command to reload your config has been added: &lt;code&gt;/reload&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;alternative-config-file&#34;&gt;Alternative config file&lt;/h2&gt;
&lt;p&gt;A possibility to specify an alternative config file has been added: Use &lt;code&gt;profanity -c ~/path/to/other/config&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;changes&#34;&gt;Changes&lt;/h2&gt;
&lt;h3 id=&#34;preferences&#34;&gt;Preferences&lt;/h3&gt;
&lt;p&gt;Preferences are not immediately saved once you change them. You will need to issue the &lt;code&gt;/save&lt;/code&gt; command from now on. This has the advantage that you can experiment with different settings and themes and only if you are happy with your changes you save them. If not everything will stay as it was.&lt;/p&gt;
&lt;h3 id=&#34;themes&#34;&gt;Themes&lt;/h3&gt;
&lt;p&gt;We changed the theme handling in Profanity.
So far if you loaded a theme with &lt;code&gt;/theme load bios&lt;/code&gt; it loaded new colors but also other settings the theme makes. Like changing the OMEMO char to &lt;code&gt;X&lt;/code&gt;.
If you decided you prefer &lt;code&gt;#&lt;/code&gt; as your indication of OMEMO encrypted messages you set this in your preferences via &lt;code&gt;/omemo char #&lt;/code&gt;. But if you later tried out different themes because you were set up with your current one it might have happened that you lost some settings &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1077&#34;&gt;#1077&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For this reason &lt;code&gt;/theme load bios&lt;/code&gt; will now only load the colors of a theme.
We have &lt;code&gt;/theme full-load bios&lt;/code&gt; to load the complete theme.&lt;/p&gt;
&lt;h3 id=&#34;error-message-in-settings-commands&#34;&gt;Error message in settings commands&lt;/h3&gt;
&lt;p&gt;Profanity has functions that display settings of a certain command. Like &lt;code&gt;/logging&lt;/code&gt; displays the settings for group and chat logging.
So you know what value they have before you change them.
So far if you issued a setting command it displayed the information, but also informed you that the command was not valid &lt;code&gt;Invalid usage, see &#39;/help logging&#39; for details.&lt;/code&gt;. This has been fixed. &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1237&#34;&gt;#1237&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;xep-0092&#34;&gt;XEP-0092&lt;/h3&gt;
&lt;p&gt;XEP-0092 Software Version, sends now the name of your operating system too.
You can switch this off with &lt;code&gt;/os off&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;standardize-comamnds&#34;&gt;Standardize comamnds&lt;/h3&gt;
&lt;p&gt;In an attempt to standardize commands some functionality got reorganized in different/new commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/tls show on|of&lt;/code&gt; -&amp;gt; &lt;code&gt;/titlebar show|hide tls&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/encwarn on|off&lt;/code&gt; -&amp;gt; &lt;code&gt;/titlebar show|hide encwarn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/titlebar show|hide resource&lt;/code&gt; additionally to &lt;code&gt;/resource titlebar on&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/titlebar show|hide presence&lt;/code&gt; additionally to &lt;code&gt;/presence titlebar on&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/invite &amp;lt;contact&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;/invite send &amp;lt;contact&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/invites&lt;/code&gt; -&amp;gt; &lt;code&gt;/invite list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/decline&lt;/code&gt; -&amp;gt; &lt;code&gt;/invite decline&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/online&lt;/code&gt;, &lt;code&gt;/away&lt;/code&gt;, &lt;code&gt;/dnd&lt;/code&gt;, &lt;code&gt;/chat&lt;/code&gt;, &lt;code&gt;/xa&lt;/code&gt; -&amp;gt; &lt;code&gt;/status set online&lt;/code&gt; etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/status&lt;/code&gt; -&amp;gt; &lt;code&gt;/status get&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/chlog on&lt;/code&gt; -&amp;gt; &lt;code&gt;/logging chat on&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/grlog on&lt;/code&gt; -&amp;gt; &lt;code&gt;/logging group on&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/group&lt;/code&gt; -&amp;gt; &lt;code&gt;/roster group&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Read &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1116&#34;&gt;#1116&lt;/a&gt;, &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1224&#34;&gt;#1224&lt;/a&gt;, &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1229&#34;&gt;#1229&lt;/a&gt; if you want to know more.&lt;/p&gt;
&lt;h2 id=&#34;muc-pm-messages&#34;&gt;MUC PM Messages&lt;/h2&gt;
&lt;p&gt;Log MUC PM messages &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1184&#34;&gt;#1184&lt;/a&gt;, &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1214&#34;&gt;#1214&lt;/a&gt;, so far this was actually not done.&lt;/p&gt;
&lt;h2 id=&#34;muc-messages&#34;&gt;MUC Messages&lt;/h2&gt;
&lt;p&gt;We now use XEP-0359: Unique and Stable Stanza IDs to detect if MUC messages come from us or not &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1207&#34;&gt;#1207&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;clear-command&#34;&gt;Clear command&lt;/h2&gt;
&lt;p&gt;Add &lt;code&gt;/clear&lt;/code&gt; autocompletion and improve its documentation &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/855&#34;&gt;#855&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;subscribed-message&#34;&gt;Subscribed message&lt;/h2&gt;
&lt;p&gt;Don&amp;rsquo;t print subscribed message if contact is already in roster &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1166&#34;&gt;#1166&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;fixes&#34;&gt;Fixes&lt;/h2&gt;
&lt;h3 id=&#34;timestamps&#34;&gt;Timestamps&lt;/h3&gt;
&lt;p&gt;So far we just displayed the timestamp of the first &lt;!-- raw HTML omitted --&gt; tag we found. Now we fixed this to actually check for the oldest timestamp. Meaning that the time a message was send should now be when it was first delayed not the last or any other delay &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1254&#34;&gt;#1254&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;omemo&#34;&gt;OMEMO&lt;/h3&gt;
&lt;p&gt;Several OMEMO related bugs were fixed by @paulfarielle, @svensp, @aszlig.&lt;/p&gt;
&lt;h3 id=&#34;occupants-and-roster-chars&#34;&gt;Occupants and roster chars&lt;/h3&gt;
&lt;p&gt;Occupants and roster chars have never actually been saved!
Seems noone discovered this for years until recently &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1244&#34;&gt;#1244&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;status-messages&#34;&gt;Status messages&lt;/h3&gt;
&lt;p&gt;Allow setting of status message (which actually never worked before) &lt;a href=&#34;https://github.com/profanity-im/profanity/commit/b846c4970bb8054ca2bacb8cebdbe4d9302f4cb6&#34;&gt;b846c49&lt;/a&gt;.
&lt;code&gt;/status set online &amp;quot;This is my text&amp;quot;&lt;/code&gt;
&lt;code&gt;/status set away bye&lt;/code&gt;
&lt;code&gt;/status set away&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;date&#34;&gt;Date&lt;/h3&gt;
&lt;p&gt;If you configure Profanity to load the last few lines from the history in a chat window. It always displayed a date of &lt;code&gt;01-01-00&lt;/code&gt; as this was hardcoded.
Now it acually uses the right one. Seems this has gone unnoticed for years too &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/922&#34;&gt;#922&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;memory-leaks&#34;&gt;Memory leaks&lt;/h3&gt;
&lt;p&gt;We fixed many memory leaks. Profanity should be much nicer now if you plan to never quit it.&lt;/p&gt;
&lt;h3 id=&#34;log-message-carbons&#34;&gt;Log message carbons&lt;/h3&gt;
&lt;p&gt;Carbon copied messages now get logged too &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1181&#34;&gt;#1181&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to get a backtrace</title>
      <link>https://profanity-im.github.io/blog/post/how-to-get-a-backtrace/</link>
      <pubDate>Sun, 26 Jan 2020 17:16:59 +0200</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/how-to-get-a-backtrace/</guid>
      <description>&lt;p&gt;When you&amp;rsquo;re running profanity master it may occur that profanity crashes
with SIGSEGV or SIGABRT when new features are added. If this happens it
is helpful to provide a backtrace for the developers to find and fix the
bug.&lt;/p&gt;
&lt;p&gt;I will explain one possibility how to get a backtrace of profanity
(or any other TUI application)&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;h3 id=&#34;preparation&#34;&gt;Preparation&lt;/h3&gt;
&lt;p&gt;The following requirements must be installed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/gdb/&#34;&gt;gdb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;gdbserver&lt;/li&gt;
&lt;li&gt;debug symbols (depending on your distribution they might already be included)
&lt;ul&gt;
&lt;li&gt;e.g. profanity-dbgsym (for debian)&lt;/li&gt;
&lt;li&gt;e.g. libstrophe0-dbgsym (for debian)&lt;/li&gt;
&lt;li&gt;e.g. libexpat1-dbgsym (for debian)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;run-profanity&#34;&gt;Run profanity&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Open terminal #1
&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;gdbserver localhost:1234 /usr/bin/profanity&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Open terminal #2
&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;gdb /usr/bin/profanity&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enter &lt;code&gt;target remote localhost:1234&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enter &lt;code&gt;c&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Profanity opens in terminal #1
&lt;ul&gt;
&lt;li&gt;Reproduce crash&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;gdb&lt;/em&gt; command line opens in terminal #2
&lt;ul&gt;
&lt;li&gt;Enter &lt;code&gt;bt&lt;/code&gt; or &lt;code&gt;bt full&lt;/code&gt; &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create an issue in the &lt;a href=&#34;https://github.com/profanity-im/profanity/issues&#34;&gt;bugtracker&lt;/a&gt; and include the output of the previous step (see &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1159&#34;&gt;this example&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;This explanation was first published &lt;a href=&#34;https://blog.mdosch.de/2019/09/20/how-to-debug-a-tui-application/&#34;&gt;on my personal blog&lt;/a&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;code&gt;bt full&lt;/code&gt; gives a much more detailled output but in most cases &lt;code&gt;bt&lt;/code&gt; is enough for the dev to know what&amp;rsquo;s going on.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Intro</title>
      <link>https://profanity-im.github.io/blog/post/intro/</link>
      <pubDate>Fri, 03 Jan 2020 17:16:59 +0200</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/intro/</guid>
      <description>&lt;p&gt;Hello folks!
Now with the 0.8.0 release around the corner we would like to start a development blog.
We hope to give you some insights here about ongoing work, our problems, goals and where you could contribute.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://profanity-im.github.io/blog/about/</link>
      <pubDate>Tue, 30 Jul 2019 17:05:33 +0200</pubDate>
      
      <guid>https://profanity-im.github.io/blog/about/</guid>
      <description>&lt;p&gt;Development blog for Profanity.&lt;/p&gt;
&lt;p&gt;Contribute by creating pull requests to &lt;a href=&#34;https://github.com/profanity-im/blog&#34;&gt;https://github.com/profanity-im/blog&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
